
  LOG INNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN

  import React, { useState, useRef} from 'react';
import { Form , Button , Card, Alert } from 'react-bootstrap'
import { useAuth } from '../contexts/AuthContext';
import { Link, useNavigate } from 'react-router-dom';

export default function LogIn(){
  const emailRef = useRef()
  const passwordRef = useRef()
  const { logIn } = useAuth()
  const [error,setError] = useState("")
  const [loading,setLoading] = useState(false)
  const navigate = useNavigate()

async function handleSubmit(e){
  e.preventDefault()

  try {
    setError("")
    setLoading(true)
    logIn(emailRef.current.value, passwordRef.current.value)
    navigate.push("/")
  } catch {
    setError('Failed to log in')
  }
  setLoading(false)
}
return (
<>
    <Card>
      <Card.Body>
        <h2 className='text-center mb-4'>Log in</h2>
        {error && <Alert variant="danger">{error}</Alert>}

        <Form onSubmit={handleSubmit}>
          <Form.Group id="email">
            <Form.Label>Email</Form.Label>
            <Form.Control type="email" ref={emailRef} required/>
          </Form.Group>

          <Form.Group id="password">
            <Form.Label>Password</Form.Label>
            <Form.Control type="password" ref={passwordRef} required/>
          </Form.Group>

          <Button disabled={loading} className='w-100' type='submit'>Log In</Button>

        </Form>
      </Card.Body>
    </Card>
    <div className='w-100 text-center mt-2'>Don't have an account yet? <Link to="/signup">Register</Link></div>
  </>
)
}


// SIGN UPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 

import React, { useRef, useState } from 'react';
import { Form , Button , Card, Alert } from 'react-bootstrap'
import { useAuth } from '../contexts/AuthContext';
import { Link } from 'react-router-dom';

export default function SignUp(){
  const emailRef = useRef()
  const passwordRef = useRef()
  const passwordConfirmRef = useRef()
  const { signUp } = useAuth()
  const [error,setError] = useState("")
  const [loading,setLoading] = useState(false)

  async function handleSubmit(e){
    e.preventDefault()

    if(passwordRef.current.value !== passwordConfirmRef.current.value){
      return setError('Passwords do not match')
    }
    try {
      setError("")
      setLoading(true)
      signUp(emailRef.current.value, passwordRef.current.value)
    } catch {
      setError('Failed to create an account')
    }
    setLoading(false)
  }

  return (
  <>
    <Card>
      <Card.Body>
        <h2 className='text-center mb-4'>Sign Up</h2>
        {error && <Alert variant="danger">{error}</Alert>}

        <Form onSubmit={handleSubmit}>
          
        <Form.Group id="name">
            <Form.Label>Name</Form.Label>
            <Form.Control type="text" required/>
          </Form.Group>

          <Form.Group id="last name">
            <Form.Label>Last name</Form.Label>
            <Form.Control type="text" required/>
          </Form.Group>

          <Form.Group id="email">
            <Form.Label>Email</Form.Label>
            <Form.Control type="email" ref={emailRef} required/>
          </Form.Group>

          <Form.Group id="password">
            <Form.Label>Password</Form.Label>
            <Form.Control type="password" ref={passwordRef} required/>
          </Form.Group>

          <Form.Group id="password-confirm">
            <Form.Label>Password confirmation</Form.Label>
            <Form.Control type="password" ref={passwordConfirmRef} required/>
          </Form.Group>

          <Button disabled={loading} className='w-100' type='submit'>Sign Up</Button>

        </Form>
      </Card.Body>
    </Card>
    <div className='w-100 text-center mt-2'>Already have an account? <Link to="/login">Log in</Link></div>
  </>
  )
};

// AUTH CONTEXTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT

import React, {  useState, useContext , useEffect}  from 'react';
import { Auth } from '../firebase'
import { createUserWithEmailAndPassword, signInWithEmailAndPassword, sendPasswordResetEmail, onAuthStateChanged, signOut } from 'firebase/auth'; 

const AuthContext = React.createContext({
    currentUser: null,
    signUp: () => Promise,
    logIn: () => Promise,
    resetPassword: () => Promise,
    updateEmail: () => Promise,
    updatePassword: () => Promise,
    logOut: () => Promise,
    signInWithEmailAndPassword,
    sendPasswordResetEmail
})

const { Provider } = AuthContext

export function useAuth() {
    return useContext(AuthContext)
}

export default function AuthProvider({ children }) {
    const [currentUser,setCurrentUser] = useState()
    const [loading,setLoading] = useState(true)

    function signUp(email,password){
        return createUserWithEmailAndPassword(Auth, email,password)
    }
    function logIn(email,password){
        return signInWithEmailAndPassword(Auth, email,password)
    }
    function logOut(){
        return signOut(Auth)
    }
    function resetPassword(email){
        return sendPasswordResetEmail(Auth,email)
    }
    function updateEmail(email){
        return currentUser.updateEmail(email)
    }
    function updatePassword(password){
        return currentUser.updatePassword(password)
    }
    useEffect(()=>{
        const unSuscribe = onAuthStateChanged(Auth,user=> {  
            setCurrentUser(user)
            setLoading(false)
        })
        return unSuscribe
    },[])

    const value = {
        currentUser,
        signUp,
        logIn,
        logOut,
        resetPassword,
        updateEmail,
        updatePassword
    }

    return (
        <Provider value={value}>
            {!loading && children }
        </Provider>
    )

}

// MARKDOWN

# Getting Started with Create React App1

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in your browser.

The page will reload when you make changes.\
You may also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can't go back!**

If you aren't satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you're on your own.

You don't have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn't feel obligated to use this feature. However we understand that this tool wouldn't be useful if you couldn't customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)

    
   






